Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
Every close bracket has a corresponding open bracket of the same type.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false

Solution:

class Solution {
    public boolean isValid(String s) {
        char[] ch = s.toCharArray();
        Stack<Character> stack = new Stack<Character>();
        for(int i=0;i<ch.length;i++){
            if(ch[i]==')' && !stack.isEmpty() && stack.peek()=='(')
                stack.pop();
            else if(ch[i]=='}' && !stack.isEmpty() && stack.peek()=='{')
                stack.pop();
            else if(ch[i]==']' && !stack.isEmpty() && stack.peek()=='[')
                stack.pop();
            else stack.push(ch[i]);
        }
        return stack.isEmpty();
            
    }
}
