Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.



Solution:

class Solution {
    public String longestCommonPrefix(String[] strs) {
       int min=200;
	        for(int i=0; i<strs.length;i++){
	            if(min>strs[i].length()){
	                min=strs[i].length();
	            }
	        }
	        ///min=4
	        boolean flag=false;
	        char c;
	        int i=0;
	        for(i=0;i<min;i++){
	            c=strs[0].charAt(i);
	            for(int j=1;j< strs.length;j++){
	                if(c!=strs[j].charAt(i)){
	                    flag=true;
	                    break;
	            }     
	            
	        }
	             if(flag){
	                    break;
	                }
	        }
	        return strs[0].substring(0,i);

    
    }
}
